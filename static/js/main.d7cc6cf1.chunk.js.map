{"version":3,"sources":["components/Navbar.js","components/TextArea.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","about","onClick","changeTheme","blue","style","border","green","yellow","red","toggleMode","htmlFor","TextArea","useState","text","setText","color","heading","value","onChange","event","target","rows","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alert","height","alert","role","message","defaultProps","App","setColor","setMode","setAlert","body","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d7cc6cf1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  \r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                {props.about}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n         \r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={props.changeTheme.blue} style={{border: '1px solid black'}} />\r\n        <button className=\"btn btn-success mx-2\" onClick={props.changeTheme.green} style={{border: '1px solid black'}}/>\r\n        <button className=\"btn btn-warning mx-2\" onClick={props.changeTheme.yellow} style={{border: '1px solid black'}}/>\r\n        <button className=\"btn btn-danger mx-2\" onClick={props.changeTheme.red} style={{border: '1px solid black'}}/>\r\n\r\n        <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'} `}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick= {props.toggleMode} />\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Enable dark mode</label>\r\n      </div>\r\n      </div>\r\n    </nav>\r\n    \r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string,\r\n}\r\nNavbar.defaultProps = {\r\n    title: \"Title\",\r\n    about: \"About\" \r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextArea(props) {\r\n\r\n    const handleOnClick=(event)=>{\r\n        setText(event.target.value)\r\n        \r\n    }\r\n    const handleUpClick= ()=> {\r\n        let newText= text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Changed to upperCase\",\"success\")\r\n    }\r\n    const handleLowerClick= ()=> {\r\n        let newText= text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Changed to lowerCase\",\"success\")\r\n    }\r\n    const handleClear= ()=> {\r\n        setText('')\r\n        props.showAlert(\"Cleared text\",\"info\")\r\n    }\r\n\r\n    const handleCopy= ()=>{\r\n\r\n        var text = document.getElementById(\"textArea\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Text copied\",\"success\")\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText= text.split(/[ ]+/);\r\n        setText(newText.join(\" \")); \r\n    }\r\n\r\n\r\n\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\" >\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnClick} id=\"textArea\" rows=\"6\" style={{backgroundColor: props.color, color:props.mode==='light'?'black':'white'}}></textarea>\r\n            </div>\r\n            <button className={`btn btn-${props.mode==='light'?'primary':props.mode} mx-2`} disabled={text.length===0} onClick={handleUpClick}>Upper case</button>\r\n            <button className={`btn btn-${props.mode==='light'?'primary':props.mode} mx-2`} disabled={text.length===0} onClick={handleLowerClick}>Lower case</button>\r\n            <button className={`btn btn-${props.mode==='light'?'primary':props.mode} mx-2`} disabled={text.length===0} onClick={handleClear}>clear text</button>\r\n            <button className={`btn btn-${props.mode==='light'?'primary':props.mode} mx-2`} disabled={text.length===0} onClick={handleCopy}>copy text</button>\r\n            <button className={`btn btn-${props.mode==='light'?'primary':props.mode} mx-2`} disabled={text.length===0} onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}} >\r\n            <h2>Text summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element =>{return element.length !== 0})).length} words and {text.length} characters</p>\r\n            <p>Normal reading time : {text.split(\" \").filter((element =>{return element.length !== 0})).length * 0.008}</p>\r\n            <hr />\r\n            <h2 className=\"my-3\"> Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div style = {{height: \"50px\"}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type}`} role=\"alert\">\r\n                {props.alert.message}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextArea from \"./components/TextArea\";\nimport Alert from \"./components/Alert\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [color, setColor] = useState(\"white\");\n  const [mode, setMode] = useState(\"light\");\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#06081c\";\n      setColor(\"#06081c\");\n      // showAlert(\"Enabeled dark mode\", \"success\");\n    } else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      // showAlert(\"Enabeled light mode\", \"success\");\n      setColor(\"white\");\n    }\n  };\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({ message: message, type: type });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const red = () => {\n    document.body.style.backgroundColor = \"#520000\";\n    setColor(\"#520000\");\n    setMode(\"danger\");\n  };\n  const green = () => {\n    document.body.style.backgroundColor = \"#031a01\";\n\n    setColor(\"#031a01\");\n    setMode(\"success\");\n  };\n  const blue = () => {\n    document.body.style.backgroundColor = \"#051836\";\n\n    setColor(\"#051836\");\n    setMode(\"info\");\n  };\n  const yellow = () => {\n    document.body.style.backgroundColor = \"#524800\";\n\n    setColor(\"#524800\");\n    setMode(\"warning\");\n  };\n\n  const changeTheme = { red: red, green: green, blue: blue, yellow: yellow };\n  return (\n    <>\n      <div className=\"App\">\n        <Navbar\n          title=\"TextUtils\"\n          about=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n          changeTheme={changeTheme}\n        />\n      </div>\n      <Alert alert={alert} />\n      <TextArea\n        heading=\"Enter your text here\"\n        mode={mode}\n        showAlert={showAlert}\n        color={color}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}